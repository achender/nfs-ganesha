LOG 
{
        Default_log_level = NIV_EVENT;
        Facility {
                 name = "ganeshalogger";
                 destination = "/tmp/ganesha.log";
                 max_level = NIV_FULL_DEBUG;
                 headers = "all";
                 enable = active;
        }
        Format {
               date_format = "none";
               time_format = "ganesha";
               #user_date_format = 0;                  
               #user_time_format = 0;                                        
               EPOCH = FALSE;
               HOSTNAME = FALSE;
               PID = FALSE;
               THREAD_NAME = TRUE;
               FILE_NAME = TRUE;
               LINE_NUM = TRUE;
               FUNCTION_NAME = TRUE;
               COMPONENT = TRUE;
               LEVEL = TRUE;
        }
        Components {
               #COMPONENT_NFSPROTO = NIV_FULL_DEBUG;
               #COMPONENT_NFS_V4 = NIV_FULL_DEBUG;
               #COMPONENT_NFS_V4_LOCK = NIV_FULL_DEBUG;
        }
}

###################################################
#
# Cache_Inode Hash Parameter
#
###################################################
CacheInode_Hash
{
    # Size of the array used in the hash
    # (must be a prime number for algorithm efficiency)
    #Index_Size = 17 ;

    # Number of signs in the alphabet used to write the keys
    #Alphabet_Length = 10 ;

    # Number of preallocated RBT nodes
    #Prealloc_Node_Pool_Size = 10000 ;
}

###################################################
#
# Cache_Inode Client Parameter
#
###################################################

CacheInode_Client
{
    # cache inode debug level
    #DebugLevel = NIV_EVENT;

    # cache inode log file 
    #LogFile = "SYSLOG";
    LogFile = "/tmp/ganesha.log";

    # LRU list item preallocated pool size
    #LRU_Prealloc_PoolSize = 1000 ;

    #Number of use of the LRU list before garbagging it
    #LRU_Nb_Call_Gc_invalid = 100 ;
    
    # CacheInode Entry preallocated pool size
    Entry_Prealloc_PoolSize = 1000 ;

    # CacheInode Parent Data preallocated pool size
    #ParentData_Prealloc_PoolSize = 1000 ;

    # Time after which attributes should be renewed
    # A value of 0 will disable this feature
    # Attr_Expiration_Time = Never ;
    Attr_Expiration_Time = 600 ;

    # This flag tells if 'access' operation are to be performed
    # explicitely on the FileSystem or only on cached attributes information
    Use_Test_Access = 1 ;

    # Number of opened files  (take care of tcp connections...)
    #Max_Fd = 128 ;

    # Open file retention (in seconds)
    #OpenFile_Retention = 5 ;

    # flag used to enable/disable this feature
    #Use_OpenClose_cache = YES ;

    # Use getattr as for directory invalidation
    Use_Getattr_Directory_Invalidation = 0;
}

###################################################
#	
# Cache_Inode Garbagge collection policy
#
###################################################

CacheInode_GC_Policy
{
    # Lifetime for a file before being a candidate to GC
    # A value of -1 will disable file GC
    #File_Lifetime = 600 ;

    # Lifetime for a directory before being a candidate to GC
    # A value of -1 will disable file GC
    #Directory_Lifetime = 1200 ;

    # GC High Water Mark 
    #NbEntries_HighWater = 10000 ;

    # GC Low Water Mark
    #NbEntries_LowWater = 9000 ;

    # Runtime interval (in seconds)
    #Runtime_Interval = 360 ;

    # Number of calls to be made to Cache_Inode layer before testing for GC
    #Nb_Call_Before_GC = 10000 ;

    # The values below that are not commented out are recommended values
    # Commented out values are defaults

    # High water mark for cache entries
    #Entries_HWMark = 100000;

    # Do we cache fd or not?
    #Cache_FDs = TRUE;

    # Interval in seconds between runs of the LRU cleaner thread
    #LRU_Run_Interval = 600;
    LRU_Run_Interval = 90;

    # The percentage of the system-imposed maximum of file descriptors above
    # which Ganesha will make greater efforts at reaping.
    #FD_HWMark_Percent = 90;
    FD_HWMark_Percent = 60;

    # The percentage of the system-imposed maximum of file descriptors below which
    # Ganesha will not reap file descriptonot reap file descriptorsrs.
    #FD_LWMark_Percent = 50;
    FD_LWMark_Percent =  20;

    # The percentage of the system-imposed maximum of file descriptors at which
    # Ganesha will deny requests.
    #FD_Limit_Percent = 99;
    FD_Limit_Percent = 90 ;

    # Roughly, the amount of work to do on each pass through the thread under
    # normal conditions.  (Ideally, a multipel of the number of lanes.)
    #Reaper_Work = 1000;
    Reaper_Work = 15000 ;

    # The largest window (as a percentage of the system-imposed limit on FDs)
    # work that we will do in extremis.
    #Biggest_Window = 40;

    # Percentage of progress toward the high water mark required in in a
    # pass through the thread when in extremis.
    #Required_Progress = 5;

    # Number of failures to approach the high watermark before we disable
    # caching, when in extremis.
    #Futility_Count = 8;
}


###################################################
#
# File_content Client Parameter
#
###################################################

FileContent_Client
{
        # log file for cache content flush
        #LogFile = "SYSLOG";
        #DebugLevel = NIV_EVENT;
 
	# LRU list item preallocated pool size
	LRU_Prealloc_PoolSize = 1000 ;

	#Number of use of the LRU list before garbagging it
    	LRU_Nb_Call_Gc_invalid = 100 ;

	# File content preallocated pool size 
	Entry_Prealloc_PoolSize = 100 ;

 	# The place where this client should store its cached entry
	Cache_Directory = /tmp/ganesha.datacache ;
}


###################################################
#
# File_Content  Garbagge collection policy
#
###################################################

FileContent_GC_Policy
{
    # Lifetime for a file before being a candidate to GC
    # A value of -1 will disable file GC
    Lifetime = 60 ;

    # GC High Water Mark (in percent)
    Df_HighWater = 99 ;

    # GC Low Water Mark (in percent)
    Df_LowWater = 90 ;

    # Runtime interval (in seconds)
    Runtime_Interval = 0 ;

    # Number of calls to be made to File_Content layer before testing for GC
    Nb_Call_Before_GC = 100 ;

    # Emergency flush grace period: 
    # file who are younger than this delay will remain in FileContent Cache
    Emergency_Grace_Delay = 120 ;
}


###################################################
#
#  NFS_Worker_Param 
#
###################################################

NFS_Worker_Param
{
	# Size of the prealloc pool size for pending jobs
        #Pending_Job_Prealloc = 30 ;

	# Number of job before GC on the worker's job pool size
	#Nb_Before_GC = 101  ;

	# Number of preallocated entry for duplicate requests 
        #Nb_DupReq_Prealloc = 100 	;
	
	# LRU list item preallocated pool size
        #LRU_DupReq_Prealloc_PoolSize = 100 ;

	# Number of Duplicate Request before GC
	 #Nb_DupReq_Before_GC = 10 ;

	# Number of preallocated IP stats cache entries
        #Nb_IP_Stats_Prealloc = 20 ;
}

###################################################
#
#  NFS_Worker_Param 
#
###################################################

NFS_Core_Param
{
	# Number of worker threads to be used
	#Nb_Worker = 16;
        Nb_Worker = 512;

        #Rquota port
	Rquota_Port = 64000 ;

	# NFS Port to be used 
	# Default value is 2049
	NFS_Port = 2049 ;

	# The following RPC program numbers should not be changed from default
	# without some specific reason of understanding that clients may be
	# confused by using different RPC program numbers.
	
	# NFS RPC Program number 
	# Default value is 100003
	#NFS_Program = 100003 ;

	# Mount protocol RPC Program Number
	# Default value is 100005
	#MNT_Program = 100005 ;

        #Network Lock Manager Program Number
	#NLM_Program = 100021;

        #RQuota Program Number
	#RQOTA_Program = 100011;


	# Bind to only a single address
	# With this option set, Ganesha will bind all sockets to the specified address.
	# Default is INADDR_ANY (0.0.0.0), example below
        # Bind_Addr = "192.168.1.1" ;

	#DRC_Disabled = True;

	# Size to be used for the core dump file (if the daemon crashes)
        Core_Dump_Size = -1 ;
        
	#Manage_Gids_Expiration = 30;

	# Nb_Call_Before_Queue_Avg = 1000 ;

	# Global Max Outstanding Requests
	#Dispatch_Max_Reqs = 1024

	# Per-Xprt Max Outstanding Requests
	#Dispatch_Max_Reqs_Xprt = 50

	# Disable DRC completely
	#DRC_Disabled = FALSE ;

	# Number of hash/rbtree partitions in TCP/per-connection DRCs
	#DRC_TCP_Npart = 1;

	# Upper bound on TCP/per-connection DRC entries
	#DRC_TCP_Size = 1024;

	# Size of (per-partition) expected entry caches
	#DRC_TCP_Cachesz = 127;

	# Cache entry retire high water mark (when retire window clear)
	#DRC_TCP_Hiwat = 64;

	# Number of hash/rbtree partitions TCP DRC recycle cache
  	#DRC_TCP_Recycle_Npart = 7;

	# TTL for unused TCP/per-connection DRCs, in seconds
  	#DRC_TCP_Recycle_Expire_S = 600 ;

	# Checksum request headers?
  	#DRC_TCP_Checksum = TRUE;

	# Number of hash/rbtree partitions in the shared UDP DRC
	#DRC_UDP_Npart = 17;

	# Upper bound on shared DRC entries
	#DRC_UDP_Size = 32768;

	# Size of (per-partition) expected entry caches
	#DRC_UDP_Cachesz = 599;

	# Cache entry retire high water mark (when retire window clear)
	#DRC_UDP_Hiwat = 16384;

	# Checksum request headers?
	#DRC_UDP_Checksum = TRUE;

	# Specify the types of errors that may be dropped
	#Drop_IO_Errors = TRUE;
	#Drop_Inval_Errors = FALSE;
	#Drop_Delay_Errors = TRUE;

	# Size to be used for the core dump file (if the daemon crashes)
	#Core_Dump_Size = -1 ;

        # Maximum Number of open fds
        # Nb_Max_Fd=1024;
        #Nb_Max_Fd = -1 ; # -1 is not the default value

	# The path for the stats file
	#Stats_File_Path = "/tmp/ganesha.stats" ;

	# The delay for producing stats (in seconds)
	#Stats_Update_Delay = 600 ;

	# The duration a worker thread is allowed to process a single request without
	# raising a long processing message.
	#Long_Processing_Threshold = 10;

	# The delay before idle TCP connection threads will be discarded
	#TCP_Fridge_Expiration_Delay = -1;

	# These options control per client statistics
	#Dump_Stats_Per_Client = FALSE;
	#Stats_Per_Client_Directory = "/tmp";

	# If the following is TRUE, NSM will use caller name instead of IP address
	# to track failed clients
	#NSM_Use_Caller_Name = FALSE

	# Is this a clustered environment
	# Default value is FALSE for Ganesha, but GPFS is clustered
	Clustered = TRUE ;

	# The size of each RPC send buffer in bytes and effectively the maximum send size.
	#MaxRPCSendBufferSize = 32768 ;

	# The size of each RPC receive buffer in bytes and effectively the maximum receive size.
	#MaxRPCRecvBufferSize = 32768 ;

	# List of NFS Protocol Versions that should be supported
	# Current possible values are 2, 3, and/or 4
	#Protocols="3,4";
        Protocols="3,4";

}

###################################################
#
# Duplicate Request Hash Parameter
#
###################################################

NFS_DupReq_Hash
{
    # Size of the array used in the hash 
    # (must be a prime number for algorithm efficiency)
    Index_Size = 17 ;

    # Number of signs in the alphabet used to write the keys
    Alphabet_Length = 10 ;

    # Number of preallocated RBT nodes
    #Prealloc_Node_Pool_Size = 1000;
}

###################################################
#
# IP/Name cache paramters
#
###################################################

NFS_IP_Name
{
    # Size of the array used in the hash 
    # (must be a prime number for algorithm efficiency)
    Index_Size = 17 ;

    # Number of signs in the alphabet used to write the keys
    #Alphabet_Length = 10 ;

    # Expiration time for this cache 
    Expiration_Time = 3600 ;   
}


###################################################
#
# Statistics Exporter Thread
#
###################################################

STAT_EXPORTER
{
    Access = "localhost";
    Port = "10401";
}

###################################################
#
# NFSv4 Specific configuration stuff
#
###################################################
NFSv4
{
    # Lifetime for NFSv4 Leases
    # Grace period is tied to Lease, but has a maximum value of 60
    Lease_Lifetime=90;

    # Are we using volatile fh ?
    #FH_Expire = FALSE ;

    # Should we return NFS4ERR_FH_EXPIRED if a FH is expired ?
    #Returns_ERR_FH_EXPIRED = TRUE ;
}

NFSv4_ClientId_Cache
{
    # Size of the array used in the hash (must be a prime number for algorithm efficiency)
    Index_Size = 17 ;

    # Number of signs in the alphabet used to write the keys
    Alphabet_Length = 10 ;
}

###################################################
#
# Kerberos parameters for use with RPCSEC_GSS
#
###################################################
NFS_KRB5
{
    # Principal to be used
    # Default is nfs
    #PrincipalName = nfs ;

    # Keytab Path
    # Default is /etc/krb5.keytab
    #KeytabPath = /etc/krb5.keytab ;

    # TRUE = krb5 support enabled
    # Default is TRUE
    #Active_krb5 = TRUE ;

}


